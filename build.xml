<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<project name="biocode-fims" default="build">-->

    <!--<property name="build" location="dist"/>-->
    <!--<property name="classes" location="classes"/>-->
    <!--<property name="src" location="src"/>-->
    <!--<property name="lib" location="lib"/>-->

    <!--<path id="classpath">-->
        <!--<fileset dir="lib">-->
            <!--<include name="*.jar"/>-->
        <!--</fileset>-->
    <!--</path>-->

    <!--<path id="jars">-->
        <!--<fileset dir="${lib}" includes="**/*.jar"/>-->
    <!--</path>-->

    <!--<target name="compile">-->
        <!--<javac target="1.8" source="1.8" srcdir="${src}" destdir="${classes}" classpathref="jars" debug="on"/>-->
    <!--</target>-->

    <!--<jar destfile="${store.dir}/temp_final.jar" filesetmanifest="skip">-->
        <!--<zipgroupfileset dir="dist" includes="*.jar"/>-->
        <!--<zipgroupfileset dir="dist/lib" includes="*.jar" excludes=""/>-->

        <!--<manifest>-->
            <!--<attribute name="Main-Class" value="${main.class}"/>-->
            <!--<attribute name="Class-Path" value="${mf.classpath}"/>-->
        <!--</manifest>-->
    <!--</jar>-->


    <!--<target name="build" depends="compile">-->
        <!--<jar jarfile="${build}/biocode-fims-commons.jar">-->
            <!--<fileset dir="${classes}"/>-->
        <!--</jar>-->
    <!--</target>-->

    <!--<target name="prepare" depends="clean">-->
        <!--<mkdir dir="${build}"/>-->
        <!--<mkdir dir="${classes}"/>-->
    <!--</target>-->

    <!--<target name="clean" description="cleanup module">-->
        <!--<delete dir="${classes}"/>-->
    <!--</target>-->

    <!--<path id="build.classpath">-->
        <!--<fileset dir="${basedir}/">-->
            <!--<include name="${lib}/*.jar"/>-->
        <!--</fileset>-->
    <!--</path>-->

    <!--<pathconvert property="mf.classpath" pathsep=" ">-->
        <!--<path refid="build.classpath"/>-->
        <!--<mapper>-->
            <!--<chainedmapper>-->
                <!--<flattenmapper/>-->
                <!--<globmapper from="*.jar" to="lib/*.jar"/>-->
            <!--</chainedmapper>-->
        <!--</mapper>-->
    <!--</pathconvert>-->

<!--</project>-->

<project name="biocode-fims-commons" default="main" basedir=".">
<description>
    Create a Java Project (JAR) with Ant build script
</description>

<property name="projectName" value="biocode-fims-commons" />
<property name="src.dir" location="src" />
<property name="build.dir" location="classes" />
<property name="dist.dir" location="dist" />
<property name="dist.lib.dir" location="dist/lib" />
<property name="lib.dir" value="lib" />

<target name="init">
    <mkdir dir="${build.dir}" />
</target>

<path id="classpath">
    <fileset dir="${basedir}/">
        <include name="${lib.dir}/*.jar" />
    </fileset>
</path>

<!-- Need classpath to run this -->
<target name="compile" depends="init" description="compile the source ">
    <javac includeantruntime="false" srcdir="${src.dir}"
           destdir="${build.dir}" classpathref="classpath" />
</target>

<!-- Group all dependencies into a big dependency-all.jar -->
<target name="copy-dependencies">

    <mkdir dir="${dist.lib.dir}" />

    <jar jarfile="${dist.lib.dir}/dependencies-all.jar">
        <zipgroupfileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </zipgroupfileset>
    </jar>

</target>

<!-- jar it, extract above dependency-all.jar and zip it with project files -->
<target name="jar" depends="compile, copy-dependencies"
        description="package, output to JAR">

    <mkdir dir="${dist.dir}" />
    <mkdir dir="${dist.lib.dir}" />

    <jar jarfile="${dist.dir}/${projectName}.jar" basedir="${build.dir}">
        <!--<manifest>-->
            <!--<attribute name="Main-Class" value="${main-class}" />-->
        <!--</manifest>-->
        <zipfileset src="${dist.lib.dir}/dependencies-all.jar"
                    excludes="META-INF/*.SF" />
    </jar>

</target>

<target name="clean" description="clean up">
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
</target>

<!-- Default, run this -->
<target name="main" depends="clean, compile, jar" />

</project>