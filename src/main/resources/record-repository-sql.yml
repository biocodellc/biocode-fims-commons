insertRecord: >
  INSERT INTO ${table}
    (expedition_id, local_identifier, data)
  VALUES
    (:expeditionId, :identifier, to_jsonb(:data::jsonb))
  ON CONFLICT (local_identifier, expedition_id)
    DO UPDATE SET data = to_jsonb(:data::jsonb)

insertChildRecord: >
  INSERT INTO ${table}
    (expedition_id, local_identifier, parent_identifier, data)
  VALUES
    (:expeditionId, :identifier, :parent_identifier, to_jsonb(:data::jsonb))
  ON CONFLICT (local_identifier, expedition_id)
    DO UPDATE SET data = to_jsonb(:data::jsonb)

selectRecords: >
  SELECT r.data as data
  FROM ${table} AS r
    INNER JOIN expeditions e on r.expedition_id = e.id
  WHERE e.expedition_code = :expeditionCode AND e.project_id = :projectId

deleteRecords: >
  DELETE
  FROM ${table}
  WHERE expedition_id = :expeditionId and local_identifier not in (:identifiers)